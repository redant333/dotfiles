{
    /* General purpose extensions:
       Bookmarks                        code --install-extension alefragnani.Bookmarks
       Highlight Trailing White Spaces  code --install-extension ybaumes.highlight-trailing-white-spaces
       Error Lens                       code --install-extension usernamehw.errorlens
       Vim                              code --install-extension vscodevim.vim
       Which Key                        code --install-extension VSpaceCode.whichkey

      C++ extensions:
       C/C++                            code --install-extension ms-vscode.cpptools
       Doxygen Documentation Generator  code --install-extension cschlosser.doxdocgen

      Rust:
       rust-analyzer                    code --install-extension rust-lang.rust-analyzer

      Shell script extensions:
       ShellCheck                       code --install-extension timonwong.shellcheck
    */
    /* Turn off decorations (I find them annoying) */
    "problems.decorations.enabled": false,
    "explorer.decorations.badges": false,
    "explorer.decorations.colors": false,
    "workbench.editor.decorations.colors": false,
    "workbench.editor.decorations.badges": false,
    /* Set a larger font*/
    "editor.fontSize": 17,
    /* Render whitespace */
    "editor.renderControlCharacters": true,
    "editor.renderWhitespace": "all",
    /* Put snippets on top of autocomplete
   By default, keywords come before them */
    "editor.snippetSuggestions": "top",
    /* Do not dim regions under #ifdef */
    "C_Cpp.dimInactiveRegions": false,
    /* Enable preview tabs on Ctrl+P and code navigation */
    "workbench.editor.enablePreviewFromQuickOpen": true,
    "workbench.editor.enablePreviewFromCodeNavigation": true,
    /* Vim emulation */
    "vim.handleKeys": {
        "<C-s>": false,
        "<C-z>": false,
        "<C-y>": false,
        "<C-f>": false,
        "<C-h>": false,
        "<C-n>": false,
        "<C-w>": false,
        "<C-p>": false,
        "<C-t>": false
    },
    "vim.sneak": true,
    "vim.foldfix": true,
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "u"
            ],
            "after": [],
            "commands": [
                {
                    "command": "undo",
                    "args": []
                }
            ]
        },
        {
            "before": [
                "<C-r>"
            ],
            "after": [],
            "commands": [
                {
                    "command": "redo",
                    "args": []
                }
            ]
        },
        {
            "before": [
                "g",
                "D"
            ],
            "after": [],
            "commands": [
                {
                    "command": "editor.action.revealDefinitionAside",
                    "args": []
                }
            ]
        }
    ],
    "whichkey.useFullWidthCharacters": true,
    "whichkey.bindings": [
        {
            "key": "l",
            "name": "✴️ LSP",
            "type": "bindings",
            "bindings": [
                {
                    "key": "e",
                    "name": "Toggle Error Lens",
                    "type": "command",
                    "command": "errorLens.toggle",
                    "when": "editorHasCodeActionsProvider && editorTextFocus"
                },
                {
                    "key": "f",
                    "name": "Format Document",
                    "type": "command",
                    "command": "editor.action.formatDocument"
                },
                {
                    "key": "r",
                    "name": "Rename Symbol",
                    "type": "command",
                    "command": "editor.action.rename"
                },
                {
                    "key": "a",
                    "name": "Quick Fix",
                    "type": "command",
                    "command": "editor.action.quickFix"
                },
                {
                    "key": "l",
                    "name": "CodeLens Action",
                    "type": "command",
                    "command": "codelens.showLensesInCurrentLine"
                },
                {
                    "key": "S",
                    "name": "Workspace Symbols",
                    "type": "command",
                    "command": "workbench.action.showAllSymbols"
                },
                {
                    "key": "s",
                    "name": "Document Symbols",
                    "type": "command",
                    "command": "workbench.action.gotoSymbol"
                },
                {
                    "key": "n",
                    "name": "Go To Next Error/Warning/Info",
                    "type": "command",
                    "command": "editor.action.marker.next"
                },
                {
                    "key": "N",
                    "name": "Go To Previous Error/Warning/Info",
                    "type": "command",
                    "command": "editor.action.marker.prev"
                },
            ]
        },
        {
            "key": "y",
            "name": "✴️ Yank",
            "type": "bindings",
            "bindings": [
                {
                    "key": "P",
                    "name": "Full File Path",
                    "type": "command",
                    "command": "copyFilePath"
                },
                {
                    "key": "p",
                    "name": "Relative File Path",
                    "type": "command",
                    "command": "copyRelativeFilePath"
                },
            ]
        },
        {
            "key": "g",
            "name": "✴️ Git",
            "type": "bindings",
            "bindings": [
                {
                    "key": "N",
                    "name": "Show Previous Change",
                    "type": "command",
                    "command": "editor.action.dirtydiff.previous"
                },
                {
                    "key": "n",
                    "name": "Show Next Change",
                    "type": "command",
                    "command": "editor.action.dirtydiff.next"
                },
                {
                    "key": "r",
                    "name": "Revert Selected Range",
                    "type": "commands",
                    "commands": [
                        "git.revertSelectedRanges",
                        "extension.vim_escape"
                    ]
                },
            ]
        },
        {
            "key": "w",
            "name": "Save",
            "type": "command",
            "command": "workbench.action.files.save"
        },
        {
            "key": "c",
            "name": "Close tab",
            "type": "command",
            "command": "workbench.action.closeActiveEditor"
        },
        {
            "key": "/",
            "name": "Comment",
            "type": "command",
            "command": "editor.action.commentLine"
        },
        {
            "key": "z",
            "name": "Zoom Split",
            "type": "command",
            "command": "workbench.action.toggleMaximizeEditorGroup"
        },
    ],
    /* Inlay hints customization */
    "workbench.colorCustomizations": {
        "[Default Dark+]": {
            "editorInlayHint.foreground": "#acacacf0",
            "editorInlayHint.background": "#383838",
        }
    },
    /* Rust configuration */
    "[rust]": {
        "editor.formatOnSave": false,
        "editor.inlayHints.enabled": "offUnlessPressed",
        "editor.quickSuggestions": {
            "other": "off",
            "comments": "off",
            "strings": "off"
        },
    },
    "rust-analyzer.check.command": "clippy",
    /* Customize Error Lens behavior so they are not annoying */
    "errorLens.enabled": false,
    "errorLens.onSave": true,
    "editor.semanticTokenColorCustomizations": {
        "rules": {
            "variable.global:cpp": {
                "underline": true
            },
            "variable.global:c": {
                "underline": true
            },
            "parameter": {
                "italic": true
            }
        }
    },
}